version: '2'
services:
  db:
    image: postgres:14.8-alpine
    restart: always
    environment:
      POSTGRES_DB: app_dev
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - 3307:3306
      - 5432:5432
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - kafka-app
  app:
    build:
      context: ./base-service
    command: bash -c "cd base-service && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ".:/app"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - kafka
    links:
      - db
      - kafka
    env_file:
      - "base-service/env.dev"
    networks:
      - kafka-app
  karafka-server:
    build:
      context: ./base-service
    command: bash -c "cd base-service && bundle exec karafka server"
    volumes:
      - ".:/app"
    depends_on:
      - db
      - kafka
    links:
      - db
      - kafka
    env_file:
      - "base-service/env.dev"
    networks:
      - kafka-app
  zookeeper:
    image: wurstmeister/zookeeper
    restart: on-failure
    ports:
      - '2181:2181'
    networks:
      - kafka-app
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/var/lib/kafka/data
    restart: on-failure
    networks:
      - kafka-app

volumes:
  db_data:
  kafka_data:

networks:
  kafka-app:
    driver: bridge
